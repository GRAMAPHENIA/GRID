---
// Componente placeholder para im√°genes no disponibles
export interface Props {
  width?: string;
  height?: string;
  aspectRatio?: string;
  alt?: string;
  className?: string;
  showIcon?: boolean;
}

const { 
  width = 'w-full', 
  height = 'h-64', 
  aspectRatio,
  alt = 'Imagen no disponible',
  className = '',
  showIcon = true
} = Astro.props;

// Si se proporciona aspect ratio, usar eso en lugar de height fijo
const containerClasses = aspectRatio 
  ? `${width} ${aspectRatio} ${className}`
  : `${width} ${height} ${className}`;
---

<div 
  class={`bg-zinc-900 border border-zinc-800 rounded-lg flex items-center justify-center ${containerClasses}`}
  role="img"
  aria-label={alt}
>
  {showIcon && (
    <div class="flex flex-col items-center justify-center text-zinc-600">
      <!-- Icono de imagen SVG -->
      <svg 
        class="w-12 h-12 mb-2" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24" 
        xmlns="http://www.w3.org/2000/svg"
        aria-hidden="true"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="1.5" 
          d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
        />
      </svg>
      <span class="text-sm text-zinc-500 text-center px-4">
        Imagen no disponible
      </span>
    </div>
  )}
</div>

<style>
  /* Asegurar que el placeholder mantenga proporciones correctas */
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  
  .aspect-video {
    aspect-ratio: 16 / 9;
  }
  
  .aspect-photo {
    aspect-ratio: 4 / 3;
  }
  
  .aspect-portrait {
    aspect-ratio: 3 / 4;
  }
</style>